-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Dphones.Enum.Mixen_update_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| update columns of table "mixen"

  - Index - column name
  - List - column name
  - Plays - column name
  - Title - column name
  - Url - column name

-}
type Mixen_update_column
    = Index
    | List
    | Plays
    | Title
    | Url


list : List Mixen_update_column
list =
    [ Index, List, Plays, Title, Url ]


decoder : Decoder Mixen_update_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "index" ->
                        Decode.succeed Index

                    "list" ->
                        Decode.succeed List

                    "plays" ->
                        Decode.succeed Plays

                    "title" ->
                        Decode.succeed Title

                    "url" ->
                        Decode.succeed Url

                    _ ->
                        Decode.fail ("Invalid Mixen_update_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Mixen_update_column -> String
toString enum____ =
    case enum____ of
        Index ->
            "index"

        List ->
            "list"

        Plays ->
            "plays"

        Title ->
            "title"

        Url ->
            "url"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Mixen_update_column
fromString enumString____ =
    case enumString____ of
        "index" ->
            Just Index

        "list" ->
            Just List

        "plays" ->
            Just Plays

        "title" ->
            Just Title

        "url" ->
            Just Url

        _ ->
            Nothing
